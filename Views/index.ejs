<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TransitViz | Public Transportation Data Explorer</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@400;500;600;700&display=swap"
    rel="stylesheet"
  />
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  />
  <link rel="stylesheet" href="/css/styles.css" />
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script src="https://d3js.org/topojson.v3.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <div class="app-container">
    <!-- Navbar -->
    <nav class="navbar">
      <div class="navbar-brand">
        <div class="logo">
          <i class="fas fa-bus-alt"></i>
          <span>TransitViz</span>
        </div>
        <div class="tagline">Public Transportation Data Explorer</div>
      </div>
      <div class="navbar-controls">
        <div class="location-indicator">
          <i class="fas fa-map-marker-alt"></i>
          <span id="currentLocation">United States</span>
        </div>
        <button id="homeButton" class="nav-button">
          <i class="fas fa-home"></i>
          <span>Home</span>
        </button>
        <div class="theme-toggle">
          <input type="checkbox" id="darkModeToggle" class="toggle-checkbox" />
          <label for="darkModeToggle" class="toggle-label">
            <i class="fas fa-sun"></i>
            <i class="fas fa-moon"></i>
            <span class="toggle-ball"></span>
          </label>
        </div>
      </div>
    </nav>

    <!-- Main content area -->
    <div class="content-wrapper">
      <!-- Left Panel - Analytics Dashboard -->
      <aside class="sidebar analytics-panel" id="leftPanel">
        <div class="sidebar-header">
          <h2><i class="fas fa-chart-line"></i> Analytics Dashboard</h2>
          <button id="toggleLeftPanel" class="collapse-btn">
            <i class="fas fa-chevron-left"></i>
          </button>
        </div>

        <div class="sidebar-content">
          <!-- Country Metric Selection (shown when no state is selected) -->
          <div id="metricSelection" class="selection-container">
            <div class="metric-header">
              <h3>Transit Metrics</h3>
            </div>
            <div class="selection-group">
              <label for="metricSelect">
                <i class="fas fa-filter"></i> Select Metric:
              </label>
              <div class="custom-select-wrapper">
                <select id="metricSelect" class="custom-select"></select>
                <i class="fas fa-caret-down"></i>
              </div>
            </div>
          </div>

          <!-- Country Charts Container (shown when no state is selected) -->
          <div id="countryChartsContainer" class="charts-container">
            <div class="chart-card">
              <div class="chart-header">
                <h4><i class="fas fa-chart-bar"></i> Distribution</h4>
                <div class="chart-actions">
                  <button class="chart-action-btn" id="distributionFullscreen">
                    <i class="fas fa-expand"></i>
                  </button>
                  <div class="tooltip">View fullscreen</div>
                </div>
              </div>
              <div id="distributionChartContainer" class="chart-body taller-chart">
                <canvas id="distributionChart"></canvas>
              </div>
            </div>

            <div class="chart-card">
              <div class="chart-header">
                <h4><i class="fas fa-trophy"></i> Top/Bottom Performers</h4>
                <div class="chart-actions">
                  <button class="chart-action-btn" id="performersFullscreen">
                    <i class="fas fa-expand"></i>
                  </button>
                  <div class="tooltip">View fullscreen</div>
                </div>
              </div>
              <div id="topBottomChartContainer" class="chart-body taller-chart">
                <canvas id="topBottomChart"></canvas>
              </div>
            </div>
          </div>

          <!-- County-Level Overview (shown when a state is selected) -->
          <div id="countyMetricSelection" class="selection-container county-metrics" style="display: none;">
            <div class="metric-header">
              <h3><i class="fas fa-map-marked-alt"></i> County Overview</h3>
            </div>
            <div class="selection-group">
              <label for="countyMetricSelect">
                <i class="fas fa-filter"></i> Select Metric:
              </label>
              <div class="custom-select-wrapper">
                <select id="countyMetricSelect" class="custom-select"></select>
                <i class="fas fa-caret-down"></i>
              </div>
            </div>
            <div class="chart-card">
              <div class="chart-header">
                <h4><i class="fas fa-trophy"></i> County Rankings</h4>
                <div class="chart-actions">
                  <button class="chart-action-btn" id="countyPerformersFullscreen">
                    <i class="fas fa-expand"></i>
                  </button>
                  <div class="tooltip">View fullscreen</div>
                </div>
              </div>
              <div id="countyTopBottomChartContainer" class="chart-body taller-chart">
                <canvas id="countyTopBottomChart"></canvas>
              </div>
            </div>
          </div>
        </div>
      </aside>

      <!-- Show collapsed sidebar buttons -->
      <div class="show-sidebar-btn left-sidebar-toggle" id="showLeftPanel">
        <i class="fas fa-chevron-right"></i>
      </div>

      <!-- Central map and visualization area -->
      <main class="main-content">
        <!-- View Tabs -->
        <div class="view-tabs">
          <button id="mapViewTab" class="view-tab active">
            <i class="fas fa-map"></i> Geographic Map
          </button>
          <button id="equityComparisonTab" class="view-tab">
            <i class="fas fa-balance-scale"></i> Equity Comparison
          </button>
        </div>

        <!-- Breadcrumb navigation -->
        <div class="breadcrumb">
          <i class="fas fa-map"></i>
          <span id="mapBreadcrumb">United States</span>
          <!-- Hidden element for app.js compatibility -->
          <div id="mapTitle" style="display: none;">United States</div>
        </div>

        <!-- Map Container -->
        <div id="mapContent" class="map-content">
          <div id="mapView" class="map-container">
            <!-- Map will be inserted here by D3 -->
            <div class="map-loading">
              <div class="spinner"></div>
              <span>Loading map data...</span>
            </div>
          </div>

          <div id="legend" class="map-legend">
            <!-- Legend content will be dynamically generated -->
          </div>

          <!-- Equity Comparison Container -->
          <div id="equityComparisonContent" class="equity-comparison-container">
            <div class="equity-controls">
              <div class="equity-control-group">
                <label for="equityCategorySelect">
                  <i class="fas fa-layer-group"></i> Equity Category:
                </label>
                <div class="custom-select-wrapper">
                  <select id="equityCategorySelect" class="custom-select">
                    <option value="Employment Data">Employment Data</option>
                    <option value="Housing Data">Housing Data</option>
                    <option value="Income Data">Income Data</option>
                    <option value="Race Data">Race Data</option>
                  </select>
                  <i class="fas fa-caret-down"></i>
                </div>
              </div>

              <div class="equity-control-group">
                <label for="equityMetricSelect">
                  <i class="fas fa-balance-scale"></i> Equity Metric:
                </label>
                <div class="custom-select-wrapper">
                  <select id="equityMetricSelect" class="custom-select"></select>
                  <i class="fas fa-caret-down"></i>
                </div>
              </div>

              <div class="equity-control-group">
                <label for="transitMetricSelect">
                  <i class="fas fa-bus"></i> Transit Metric:
                </label>
                <div class="custom-select-wrapper">
                  <select id="transitMetricSelect" class="custom-select"></select>
                  <i class="fas fa-caret-down"></i>
                </div>
              </div>
            </div>

            <div class="comparison-chart-container taller-chart">
              <canvas id="comparisonChart"></canvas>
            </div>
          </div>
        </div>
      </main>

      <!-- Right Panel - Data Insights -->
      <aside class="sidebar data-panel" id="dataSidebar">
        <div class="sidebar-header">
          <h2><i class="fas fa-database"></i> Data Insights</h2>
          <button id="toggleSidebar" class="collapse-btn">
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>

        <div id="dataPanelContent" class="sidebar-content">
          <!-- This content will be dynamically generated -->
        </div>
      </aside>

      <!-- Show collapsed sidebar buttons -->
      <div class="show-sidebar-btn right-sidebar-toggle" id="showRightPanel">
        <i class="fas fa-chevron-left"></i>
      </div>
    </div>

    <!-- Modal for full-screen charts -->
    <div id="chartModal" class="modal">
      <div class="modal-content">
        <div class="modal-header">
          <h3 id="modalTitle"></h3>
          <button id="closeModal" class="close-btn">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <div class="modal-body">
          <canvas id="modalChart"></canvas>
        </div>
      </div>
    </div>

    <!-- Templates -->
    <!-- State Data Template -->
    <template id="stateDataTemplate">
      <div class="state-data-container">
        <div class="template-header">
          <button id="backButton" class="back-btn">
            <i class="fas fa-arrow-left"></i> Back to National View
          </button>
          <h2 id="stateName" class="data-title"></h2>
        </div>

        <div class="data-tabs">
          <button id="stateAveragesOption" class="data-tab">
            <i class="fas fa-chart-pie"></i> Averages
          </button>
          <button id="stateFrequencyOption" class="data-tab active">
            <i class="fas fa-chart-bar"></i> Distributions
          </button>
        </div>

        <div id="stateAveragesSection" class="data-section">
          <div class="section-header">
            <h3><i class="fas fa-calculator"></i> State Averages</h3>
            <span class="section-subtitle">Key transit metrics compared to national averages</span>
          </div>
          <div class="metric-grid" id="stateMetricsGrid"></div>
        </div>

        <div id="stateFrequencySection" class="data-section">
          <div class="section-header">
            <h3><i class="fas fa-chart-bar"></i> Frequency Distributions</h3>
            <span class="section-subtitle">Statistical distribution of transit metrics</span>
          </div>
          <div id="chartsContainer" class="state-charts-container"></div>
        </div>
      </div>
    </template>

    <!-- County Data Template -->
    <template id="countyDataTemplate">
      <div class="county-data-container">
        <div class="template-header">
          <button id="backToStateButton" class="back-btn">
            <i class="fas fa-arrow-left"></i> Back to State View
          </button>
          <h2 id="countyName" class="data-title"></h2>
        </div>

        <div class="data-tabs">
          <button id="averagesOption" class="data-tab active">
            <i class="fas fa-chart-pie"></i> Averages
          </button>
          <button id="frequencyOption" class="data-tab">
            <i class="fas fa-chart-bar"></i> Distributions
          </button>
        </div>

        <div id="averagesSection" class="data-section">
          <div class="section-header">
            <h3><i class="fas fa-calculator"></i> County Averages</h3>
            <span class="section-subtitle">Key transit metrics for this county</span>
          </div>
          <div class="metric-grid" id="countyMetricsGrid"></div>
        </div>

        <div id="frequencySection" class="data-section">
          <div class="section-header">
            <h3><i class="fas fa-chart-bar"></i> Frequency Distributions</h3>
            <span class="section-subtitle">Statistical distribution of transit metrics</span>
          </div>
          <div id="countyChartsContainer" class="county-charts-container"></div>
        </div>
      </div>
    </template>

    <!-- Transit Info Card Template (kept for compatibility) -->
    <template id="transitInfoCardTemplate">
      <div class="transit-info-card">
        <h4 class="transit-info-title">
          <i class="fas fa-info-circle"></i> <span class="location-name"></span>
        </h4>
        <div class="transit-info-content">
          <!-- Content will be dynamically generated -->
        </div>
      </div>
    </template>
  </div>

  <!-- Scripts -->
  <script src="/js/app.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Initialize UI interactions
      const leftPanel = document.getElementById("leftPanel");
      const dataSidebar = document.getElementById("dataSidebar");
      const modal = document.getElementById("chartModal");
      const showLeftPanel = document.getElementById("showLeftPanel");
      const showRightPanel = document.getElementById("showRightPanel");

      // Hide show buttons initially
      showLeftPanel.style.display = "none";
      showRightPanel.style.display = "none";

      // Toggle panels
      document.getElementById("toggleLeftPanel").addEventListener("click", () => {
        leftPanel.classList.add("collapsed");
        showLeftPanel.style.display = "flex";
      });

      document.getElementById("toggleSidebar").addEventListener("click", () => {
        dataSidebar.classList.add("collapsed");
        showRightPanel.style.display = "flex";
      });

      // Show panel buttons
      showLeftPanel.addEventListener("click", () => {
        leftPanel.classList.remove("collapsed");
        showLeftPanel.style.display = "none";
      });

      showRightPanel.addEventListener("click", () => {
        dataSidebar.classList.remove("collapsed");
        showRightPanel.style.display = "none";
      });

      // Dark mode toggle
      const darkModeToggle = document.getElementById("darkModeToggle");
      const body = document.body;

      // Check user preference for dark mode
      if (localStorage.getItem("darkMode") === "enabled") {
        body.classList.add("dark-mode");
        darkModeToggle.checked = true;
      }

      darkModeToggle.addEventListener("change", () => {
        if (darkModeToggle.checked) {
          body.classList.add("dark-mode");
          localStorage.setItem("darkMode", "enabled");
        } else {
          body.classList.remove("dark-mode");
          localStorage.setItem("darkMode", "disabled");
        }
      });

      // Modal for fullscreen charts
      document
        .getElementById("distributionFullscreen")
        .addEventListener("click", () => {
          openChartInModal(
            "distributionChart",
            "Distribution of " + document.getElementById("metricSelect").value
          );
        });

      document
        .getElementById("performersFullscreen")
        .addEventListener("click", () => {
          openChartInModal(
            "topBottomChart",
            "Top/Bottom Performers - " + document.getElementById("metricSelect").value
          );
        });

      document.getElementById("countyPerformersFullscreen")?.addEventListener("click", () => {
        openChartInModal(
          "countyTopBottomChart",
          "County Rankings - " + document.getElementById("countyMetricSelect").value
        );
      });

      document.getElementById("closeModal").addEventListener("click", () => {
        modal.style.display = "none";
      });

      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          modal.style.display = "none";
        }
      });

      function openChartInModal(chartId, title) {
        const sourceChart = Chart.getChart(chartId);
        if (sourceChart) {
          modal.style.display = "flex";
          document.getElementById("modalTitle").textContent = title;

          // Clone chart configuration
          const modalCanvas = document.getElementById("modalChart");
          const modalCtx = modalCanvas.getContext("2d");

          // Destroy previous chart if exists
          const existingChart = Chart.getChart(modalCanvas);
          if (existingChart) {
            existingChart.destroy();
          }

          // Create new chart in modal
          new Chart(modalCtx, {
            type: sourceChart.config.type,
            data: JSON.parse(JSON.stringify(sourceChart.data)),
            options: {
              ...JSON.parse(JSON.stringify(sourceChart.options)),
              responsive: true,
              maintainAspectRatio: false,
            },
          });
        }
      }

      // Update location indicator
      const updateLocationIndicator = () => {
        const mapTitle = document.getElementById("mapTitle")?.textContent || "United States";
        document.getElementById("currentLocation").textContent = mapTitle;
        document.getElementById("mapBreadcrumb").textContent = mapTitle;
      };

      // Check for location updates (observe DOM changes)
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.type === "childList" || mutation.type === "characterData") {
            updateLocationIndicator();
          }
        });
      });

      const mapTitleEl = document.getElementById("mapTitle");
      if (mapTitleEl) {
        observer.observe(mapTitleEl, {
          childList: true,
          characterData: true,
          subtree: true,
        });
      }

      // Initial sync
      updateLocationIndicator();
    });
  </script>
</body>
</html>